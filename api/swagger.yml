# Author : Inho Gok,  inhogog2@netlox.io
#
# Current rules
# 1. All requests are sync.
#
# responses:
# post:
#   201 - Created
#   400 - Bad Request. Malformed arguments for API call
#   401 - Unauthorized.  Invalid authentication credentials
#   403 - Forbidden (capacity isssues)
#   404 - Object is not found
#   409 - Conflict. Request cannot be completed due to conflict with current state of target resource.
#   500 - Internal Server Error
#   503 - Service Unavailable
# patch:
#   207 - Multi-Status. Consult object body to determine status on a per element basis for the Bulk API.
#   400 - Bad Request. Malformed arguments for API call
#   401 - Unauthorized.  Invalid authentication credentials
#   403 - Forbidden (capacity isssues)
#   404 - Object is not found
#   500 - Internal Server Error
#   503 - Service Unavailable
# get:
#   200 - OK
#   400 - Bad Request. Malformed arguments for API call
#   401 - Unauthorized.  Invalid authentication credentials
#   404 - Object is not found
#   500 - Internal Server Error
#   503 - Service Unavailable
# delete:
#   200 - OK
#   204 - No Content
#   207 - Multi-Status. Consult object body to determine status on a per element basis for the Bulk API.
#   400 - Bad Request. Malformed arguments for API call
#   401 - Unauthorized.  Invalid authentication credentials
#   404 - Object is not found
#   409 - Conflict. Request cannot be completed due to conflict with current state of target resource.
#   500 - Internal Server Error
#   503 - Service Unavailable
#
# dictionary:
#   vnid
#   vlan_id
#   ip_prefix
#   ip_addr
#
# Our dataplane is designed as follow
# 1. We have virtual routers which represents a "virtual network" for a customer. Virtual networks are
#    defined using a string vnet_id, this internally creates a virtual router to maintain separate routing/forwarding domain.
#    The virtual routers are used to bind the customer's unique vnid and customer's local baremetal device ports
#    and as a result provide Virtual Network connectivity with the rest of Azure
# 2. We have a virtual routing table which is unique and separated for every virtual router.
# 3. We have tunnels which represent "Azure" next hops for virtual routing tables.
# 4. We have vlan specific APIs to define parameters for client ports
#
# POST Requests:
# REST API creation(POST) dependency list:
# 1. VxLAN VTEP: /config/tunnel/decap/vxlan OR Day 0 configuration. No dependency.
# 2. Vrouter/VNET: /config/vrouter/{vnet_id} depends on 1(VxLAN VTEP)
# 3. VLAN: /config/interface/vlan Depends on 2(VNET) if vlan needs association to vrf/vnet
# 4. Vlan member: /config/interface/vlan/{vlan_id}/member Depends on 3(VLAN)
# 5. Vlan Neighbor: /config/interface/vlan/{vlan_id}/neighbor Depends on 3(VLAN)
# 6. Vrouter/VNET Routes: /config/vrouter/{vnet_id}/routes depends on 2(VNET)
#
# DELETE Requests:
# All children/dependent elements must be deleted prior to deleting any parent config elements
# This is required for data integrity and sanity of DBs.
# eg: Vlan Neighbors and Vlan members should be deleted before deleting the Vlan itself
# REST API deletion(DELETE) dependency list:
# 1. Vrouter/VNET Routes: /config/vrouter/{vnet_id}/routes. No dependency
# 2. Vlan Neighbor: /config/interface/vlan/{vlan_id}/neighbor. No dependency
# 3. Vlan member: /config/interface/vlan/{vlan_id}/member. No dependency
# 4. VLAN: /config/interface/vlan Depends on 2(VNET). Dependes on successful deletion on all child elements 2(Vlan Neighbor) and 3(Vlan member)
# 5. Vrouter/VNET: /config/vrouter/{vnet_id}. Depends on successful deletion of all child elements 4(Vlan) and 1(Routes)
# 6. VxLAN VTEP: /config/tunnel/decap/vxlan. Depends on successful deletion of all child elements 5(VRF/VNET)
#
# Some details about '40X' error responses:
# - '400' http error returns when there're one or more malformed arguments (wrong type, format, size) in the request.
# - '404' http error returns when there're one or more references to non-existent values in the request.
# - '409' HTTP Request cannot be completed due to conflict with current state of target resource:
#       - Error sub-code 0: Conflict because the resource already exists
#       - Error sub-code 1: Conflict because of a missing dependency/parent
#       - Error sub-code 2: Conflict because the caller tries to delete a resource with a dependency/child
#       - Error format:     '#/definitions/Error'
# In case of bulk API (vroute API):
# - If a request has a malformed argument (arguments) or a reference (references) to non-existent values
#   in its path the API must return '400' or '404' respectively.
# - if a request has the same error in the attributes of the request, the API must:
#    - run the request with the valid attributes
#    - return '207' http status code to inform the caller to look within the body to confirm success/failure
#      for each of the routes
#    - put malformed attributes into the list of 'failed' attributes.



swagger: '2.0'
info:
  title: Loxilb Rest API
  description: Loxilb REST API for Baremetal Scenarios
  version: 0.0.1
schemes:
  - http
  - https
host: "192.168.20.253:8090"
basePath: /netlox/v1
produces:
  - application/json
consumes:
  - application/json
paths:
#----------------------------------------------
# Load Balancer
#----------------------------------------------
  '/config/loadbalancer':
    post:
      summary: Create a new Load balancer service
      description: Create a new load balancer service with .
      parameters:
        - name: attr
          in: body
          required: true
          description: Attributes for load balance service
          schema:
            $ref: '#/definitions/LoadbalanceEntry'
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'
  '/config/loadbalancer/all':
    get:
      summary: Get all of the load balancer services
      description: Get all of the load balancer services with conntrack infomation.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              attr:
                $ref: '#/definitions/LoadbalanceEntry'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'
  '/config/loadbalancer/externalipaddress/{ip_address}/port/{port}/protocol/{proto}':
    delete:
      summary: Create a new Load balancer service
      description: Create a new load balancer service with .
      parameters:
        - name: ip_address
          in: path
          type: string
          required: true
          description: Attributes for load balance service
        - name: port
          in: path
          type: number
          required: true
          description: Attributes for load balance service
        - name: proto
          in: path
          type: string
          required: true
          description: Attributes for load balance service
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'
#----------------------------------------------
# Conntrack
#----------------------------------------------
  '/config/conntrack/all':
    get:
      summary: Get all of the conntrack entries.
      description: Get all of the conntrack infomation for all of the service.
      responses:
        '200':
          description: OK
          schema:
              properties:
                ctAttr:
                  $ref: '#/definitions/ConntrackEntry'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'


#----------------------------------------------
# Port Dump
#----------------------------------------------
  '/config/port/all':
    get:
      summary: Get all of the port interfaces
      description: Get all of the port interfaces.
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              attr:
                $ref: '#/definitions/PortEntry'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'

#----------------------------------------------
# Route
#----------------------------------------------
  '/config/route':
    post:
      summary: Create a new route config
      description: Create a new route config .
      parameters:
        - name: attr
          in: body
          required: true
          description: Attributes for load balance service
          schema:
            $ref: '#/definitions/RouteEntry'
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'
 
  '/config/route/destinationIPNet/{ip_address}/{mask}':
    delete:
      summary: Create a new Load balancer service
      description: Create a new load balancer service with .
      parameters:
        - name: ip_address
          in: path
          type: string
          required: true
          description: Attributes for destinaion route address
        - name: mask
          in: path
          type: integer
          required: true
          description: Attributes for destination route
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'


#----------------------------------------------
# Session
#----------------------------------------------
  '/config/session':
    post:
      summary: Create a new session config
      description: Create a new session config for 5G.
      parameters:
        - name: attr
          in: body
          required: true
          description: Attributes for 5G service session
          schema:
            $ref: '#/definitions/SessionEntry'
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'
 
  '/config/session/ident/{ident}':
    delete:
      summary: Create a new Load balancer service
      description: Create a new load balancer service with .
      parameters:
        - name: ident
          in: path
          type: string
          required: true
          description: Attributes 5G session Ident.
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'

  '/config/sessionulcl':
    post:
      summary: Create a new session config
      description: Create a new session config for 5G.
      parameters:
        - name: attr
          in: body
          required: true
          description: Attributes for 5G service session
          schema:
            $ref: '#/definitions/SessionUlClEntry'
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'
 
  '/config/sessionulcl/ident/{ident}/ulclAddress/{ip_address}':
    delete:
      summary: Create a new Load balancer service
      description: Create a new load balancer service with .
      parameters:
        - name: ident
          in: path
          type: string
          required: true
          description: Attributes 5G session Ident.
        - name: ip_address
          in: path
          type: string
          required: true
          description: Attributes for session ulcl address
      responses:
        '204':
          description: OK
        '400':
          description: Malformed arguments for API call
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authentication credentials
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Capacity insufficient
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Resource not found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Resource Conflict. VLAN already exists OR dependency VRF/VNET not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal service error
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: Maintanence mode
          schema:
            $ref: '#/definitions/Error'            

#----------------------------------------------
# Schema definitions
#----------------------------------------------
definitions:
  Error:
    type: object
    properties:
      error:
        type: object
        required:
          - code
          - message
        properties:
          code:
            type: integer
            format: int32
          sub-code:
            type: integer
            format: int32
          message:
            type: string
          fields:
            type: array
            items:
              type: string
          details:
            type: string


  LoadbalanceEntry:
    type: object
    properties:
      serviceArguments:
        type: object
        properties:
          externalIP:
            type: string
            description: IP address for externel access
          port:
            type: integer
            description:  port number for the access
          protocol:
            type: string
            description:  value for access protocol
      endpoints:
        type: array
        description: values of End point servers
        items:
          properties:
            endpointIP:
              type: string
              description: IP address for externel access
            weight:
              type: integer
              description:  Weight for the load balancing
            targetPort:
              type: integer
              description:  port number for access service
  
  RouteEntry:
    type: object
    properties:
      destinationIPNet:
        type: string
        description: IP address and netmask
      gateway:
        type: string
        description: IP address for nexthop

  ConntrackEntry:
    type: array
    items:
      properties:
        destinationIP:
          type: string
          description: IP address for externel access
        sourceIP:
          type: string
          description: IP address for externel access
        destinationPort:
          type: integer
          description:  port number for the access
        sourcePort:
          type: integer
          description:  port number for the access
        protocol:
          type: string
          description:  value for access protocol
        conntrackState:
          type: string
          description:  value for Conntrack state
        conntrackAct:
          type: string
          description:  value for Conntrack Act

  PortEntry:
    type: array
    items:
      properties:
        portName:
          type: string
          description: The name of the Port interface
        portNo:
            type: integer
            description:  Index of the Port
        zone:
          type: string
          description: network zone
        portSoftwareInformation:
          type: object
          properties:
            osId:
              type: integer
              description: The ID of the Port in the software(OS)
            portType:
              type: integer
              description: port type
            portProp:
              type: integer
              description: Priority of the port
            portActive:
              type: boolean
              description: Activation status of the port
            bpfLoaded:
              type: boolean
              description: The status of the eBPF loaded 
              
        portHardwareInformation:
          type: object
          properties:
            rawMacAddress:
              type: array
              description: MAC address written by byte array
              items:
                type: integer
            macAddress:
              type: string
              description: MAC address of the port
            mtu:
              type: integer
              description: MTU of the port
            link:
              type: boolean
              description: link status
            state:
              type: boolean
              description: state...
            master:
              type: string
              description: Port's mater
            real:
              type: string
              description: real port..
            tunnelId:
              type: integer
              description: Tunnel Id such as VxLAN.
        portStatisticInformation:
          type: object
          properties:
            rxBytes:
              type: integer
              description: Statistic of the ingress port bytes.
            txBytes:
              type: integer
              description: Statistic of the egress port bytes.
            rxPackets:
              type: integer
              description: Statistic of the number of ingress packets.
            txPackets:
              type: integer
              description: Statistic of the number of egress packets.
            rxErrors:
              type: integer
              description: Statistic of the number of ingress Error packets.
            txErrors:
              type: integer
              description: Statistic of the number of egress Error packets.
        portL3Information:
          type: object
          properties:
            routed:
              type: boolean
              description: Is routed or not
            IPv4Address:
              type: array
              description: List of IP address v4
              items:
                type: string
            IPv6Address:
              type: array
              description: List of the IP address v6
              items:
                type: string
        portL2Information:
          type: object
          properties:
            isPvid:
              type: boolean
              description: Is PVID config or not
            vid:
              type: integer
              description: virtual lan id(VLAN ID)
        DataplaneSync:
          type: integer
          description: Dataplan Sync check
  
  SessionEntry:
    type: object
    properties:
      ident:
        type: string
        description: IP address and netmask
      ipAddress:
        type: string
        description: IP address for nexthop
      accessNetworkTunnel:
        type: object
        properties:
          TeID:
            type: number
            description: ID of the tunnel
          Address:
            type: string
            description: Access network IP address
      connectionNetworkTunnel:
        type: object
        properties:
          TeID:
            type: number
            description: ID of the tunnel
          Address:
            type: string
            description: Connection network IP address
        
  SessionUlClEntry:
    type: object
    properties:
      ident:
        type: string
        description: IP address and netmask
      ulclArgument:
        type: object
        properties:
          qfi:
            type: number
            description: ...?
          Address:
            type: string
            description: Access network IP address
    
  VlanPortMod:
    type: object
    properties:
      Vid:
        type: number
        description: Vlan ID
      Dev:
        type: string
        description: Interface device name
      Tagged:
        type: boolean
        description: Tagged status added
    
  IPv4AddressMod:
    type: object
    properties:
      Dev:
        type: string
        description: Name of the interface device to which you want to modify the IP address
      IpAddress:
        type: string
        description: IP address to modify.

  Neighborv4Mod:
    type: object
    properties:
      IpAddress:
        type: string
        description: IP address to neighbor
        