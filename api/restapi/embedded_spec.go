// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Loxilb REST API for Baremetal Scenarios",
    "title": "Loxilb Rest API",
    "version": "0.0.1"
  },
  "host": "192.168.20.253:8090",
  "basePath": "/netlox/v1",
  "paths": {
    "/config/conntrack/all": {
      "get": {
        "description": "Get all of the conntrack infomation for all of the service.",
        "summary": "Get all of the conntrack entries.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "ctAttr": {
                  "$ref": "#/definitions/ConntrackEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer": {
      "post": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "description": "Attributes for load balance service",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadbalanceEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/all": {
      "get": {
        "description": "Get all of the load balancer services with conntrack infomation.",
        "summary": "Get all of the load balancer services",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "attr": {
                  "$ref": "#/definitions/LoadbalanceEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/externalipaddress/{ip_address}/port/{port}/protocol/{proto}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "ip_address",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Attributes for load balance service",
            "name": "port",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "proto",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/port/all": {
      "get": {
        "description": "Get all of the port interfaces.",
        "summary": "Get all of the port interfaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "attr": {
                  "$ref": "#/definitions/PortEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/route": {
      "post": {
        "description": "Create a new route config .",
        "summary": "Create a new route config",
        "parameters": [
          {
            "description": "Attributes for load balance service",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/route/destinationIPNet/{ip_address}/{mask}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes for destinaion route address",
            "name": "ip_address",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Attributes for destination route",
            "name": "mask",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/session": {
      "post": {
        "description": "Create a new session config for 5G.",
        "summary": "Create a new session config",
        "parameters": [
          {
            "description": "Attributes for 5G service session",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/session/ident/{ident}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes 5G session Ident.",
            "name": "ident",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/sessionulcl": {
      "post": {
        "description": "Create a new session config for 5G.",
        "summary": "Create a new session config",
        "parameters": [
          {
            "description": "Attributes for 5G service session",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionUlClEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/sessionulcl/ident/{ident}/ulclAddress/{ip_address}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes 5G session Ident.",
            "name": "ident",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Attributes for session ulcl address",
            "name": "ip_address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConntrackEntry": {
      "type": "array",
      "items": {
        "properties": {
          "conntrackAct": {
            "description": "value for Conntrack Act",
            "type": "string"
          },
          "conntrackState": {
            "description": "value for Conntrack state",
            "type": "string"
          },
          "destinationIP": {
            "description": "IP address for externel access",
            "type": "string"
          },
          "destinationPort": {
            "description": "port number for the access",
            "type": "integer"
          },
          "protocol": {
            "description": "value for access protocol",
            "type": "string"
          },
          "sourceIP": {
            "description": "IP address for externel access",
            "type": "string"
          },
          "sourcePort": {
            "description": "port number for the access",
            "type": "integer"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code",
            "message"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "details": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "message": {
              "type": "string"
            },
            "sub-code": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "LoadbalanceEntry": {
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "values of End point servers",
          "type": "array",
          "items": {
            "properties": {
              "endpointIP": {
                "description": "IP address for externel access",
                "type": "string"
              },
              "targetPort": {
                "description": "port number for access service",
                "type": "integer"
              },
              "weight": {
                "description": "Weight for the load balancing",
                "type": "integer"
              }
            }
          }
        },
        "serviceArguments": {
          "type": "object",
          "properties": {
            "externalIP": {
              "description": "IP address for externel access",
              "type": "string"
            },
            "port": {
              "description": "port number for the access",
              "type": "integer"
            },
            "protocol": {
              "description": "value for access protocol",
              "type": "string"
            }
          }
        }
      }
    },
    "PortEntry": {
      "type": "array",
      "items": {
        "properties": {
          "DataplaneSync": {
            "description": "Dataplan Sync check",
            "type": "integer"
          },
          "portHardwareInformation": {
            "type": "object",
            "properties": {
              "link": {
                "description": "link status",
                "type": "boolean"
              },
              "macAddress": {
                "description": "MAC address of the port",
                "type": "string"
              },
              "master": {
                "description": "Port's mater",
                "type": "string"
              },
              "mtu": {
                "description": "MTU of the port",
                "type": "integer"
              },
              "rawMacAddress": {
                "description": "MAC address written by byte array",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "real": {
                "description": "real port..",
                "type": "string"
              },
              "state": {
                "description": "state...",
                "type": "boolean"
              },
              "tunnelId": {
                "description": "Tunnel Id such as VxLAN.",
                "type": "integer"
              }
            }
          },
          "portL2Information": {
            "type": "object",
            "properties": {
              "isPvid": {
                "description": "Is PVID config or not",
                "type": "boolean"
              },
              "vid": {
                "description": "virtual lan id(VLAN ID)",
                "type": "integer"
              }
            }
          },
          "portL3Information": {
            "type": "object",
            "properties": {
              "IPv4Address": {
                "description": "List of IP address v4",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "IPv6Address": {
                "description": "List of the IP address v6",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "routed": {
                "description": "Is routed or not",
                "type": "boolean"
              }
            }
          },
          "portName": {
            "description": "The name of the Port interface",
            "type": "string"
          },
          "portNo": {
            "description": "Index of the Port",
            "type": "integer"
          },
          "portSoftwareInformation": {
            "type": "object",
            "properties": {
              "bpfLoaded": {
                "description": "The status of the eBPF loaded",
                "type": "boolean"
              },
              "osId": {
                "description": "The ID of the Port in the software(OS)",
                "type": "integer"
              },
              "portActive": {
                "description": "Activation status of the port",
                "type": "boolean"
              },
              "portProp": {
                "description": "Priority of the port",
                "type": "integer"
              },
              "portType": {
                "description": "port type",
                "type": "integer"
              }
            }
          },
          "portStatisticInformation": {
            "type": "object",
            "properties": {
              "rxBytes": {
                "description": "Statistic of the ingress port bytes.",
                "type": "integer"
              },
              "rxErrors": {
                "description": "Statistic of the number of ingress Error packets.",
                "type": "integer"
              },
              "rxPackets": {
                "description": "Statistic of the number of ingress packets.",
                "type": "integer"
              },
              "txBytes": {
                "description": "Statistic of the egress port bytes.",
                "type": "integer"
              },
              "txErrors": {
                "description": "Statistic of the number of egress Error packets.",
                "type": "integer"
              },
              "txPackets": {
                "description": "Statistic of the number of egress packets.",
                "type": "integer"
              }
            }
          },
          "zone": {
            "description": "network zone",
            "type": "string"
          }
        }
      }
    },
    "RouteEntry": {
      "type": "object",
      "properties": {
        "destinationIPNet": {
          "description": "IP address and netmask",
          "type": "string"
        },
        "gateway": {
          "description": "IP address for nexthop",
          "type": "string"
        }
      }
    },
    "SessionEntry": {
      "type": "object",
      "properties": {
        "accessNetworkTunnel": {
          "type": "object",
          "properties": {
            "Address": {
              "description": "Access network IP address",
              "type": "string"
            },
            "TeID": {
              "description": "ID of the tunnel",
              "type": "number"
            }
          }
        },
        "connectionNetworkTunnel": {
          "type": "object",
          "properties": {
            "Address": {
              "description": "Connection network IP address",
              "type": "string"
            },
            "TeID": {
              "description": "ID of the tunnel",
              "type": "number"
            }
          }
        },
        "ident": {
          "description": "IP address and netmask",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address for nexthop",
          "type": "string"
        }
      }
    },
    "SessionUlClEntry": {
      "type": "object",
      "properties": {
        "ident": {
          "description": "IP address and netmask",
          "type": "string"
        },
        "ulclArgument": {
          "type": "object",
          "properties": {
            "Address": {
              "description": "Access network IP address",
              "type": "string"
            },
            "qfi": {
              "description": "...?",
              "type": "number"
            }
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Loxilb REST API for Baremetal Scenarios",
    "title": "Loxilb Rest API",
    "version": "0.0.1"
  },
  "host": "192.168.20.253:8090",
  "basePath": "/netlox/v1",
  "paths": {
    "/config/conntrack/all": {
      "get": {
        "description": "Get all of the conntrack infomation for all of the service.",
        "summary": "Get all of the conntrack entries.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "ctAttr": {
                  "$ref": "#/definitions/ConntrackEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer": {
      "post": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "description": "Attributes for load balance service",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadbalanceEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/all": {
      "get": {
        "description": "Get all of the load balancer services with conntrack infomation.",
        "summary": "Get all of the load balancer services",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "attr": {
                  "$ref": "#/definitions/LoadbalanceEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/externalipaddress/{ip_address}/port/{port}/protocol/{proto}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "ip_address",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Attributes for load balance service",
            "name": "port",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "proto",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/port/all": {
      "get": {
        "description": "Get all of the port interfaces.",
        "summary": "Get all of the port interfaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "attr": {
                  "$ref": "#/definitions/PortEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/route": {
      "post": {
        "description": "Create a new route config .",
        "summary": "Create a new route config",
        "parameters": [
          {
            "description": "Attributes for load balance service",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/route/destinationIPNet/{ip_address}/{mask}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes for destinaion route address",
            "name": "ip_address",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Attributes for destination route",
            "name": "mask",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/session": {
      "post": {
        "description": "Create a new session config for 5G.",
        "summary": "Create a new session config",
        "parameters": [
          {
            "description": "Attributes for 5G service session",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/session/ident/{ident}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes 5G session Ident.",
            "name": "ident",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/sessionulcl": {
      "post": {
        "description": "Create a new session config for 5G.",
        "summary": "Create a new session config",
        "parameters": [
          {
            "description": "Attributes for 5G service session",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionUlClEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/sessionulcl/ident/{ident}/ulclAddress/{ip_address}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes 5G session Ident.",
            "name": "ident",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Attributes for session ulcl address",
            "name": "ip_address",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConntrackEntry": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ConntrackEntryItems0"
      }
    },
    "ConntrackEntryItems0": {
      "properties": {
        "conntrackAct": {
          "description": "value for Conntrack Act",
          "type": "string"
        },
        "conntrackState": {
          "description": "value for Conntrack state",
          "type": "string"
        },
        "destinationIP": {
          "description": "IP address for externel access",
          "type": "string"
        },
        "destinationPort": {
          "description": "port number for the access",
          "type": "integer"
        },
        "protocol": {
          "description": "value for access protocol",
          "type": "string"
        },
        "sourceIP": {
          "description": "IP address for externel access",
          "type": "string"
        },
        "sourcePort": {
          "description": "port number for the access",
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code",
            "message"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "details": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "message": {
              "type": "string"
            },
            "sub-code": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "ErrorError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "sub-code": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LoadbalanceEntry": {
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "values of End point servers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadbalanceEntryEndpointsItems0"
          }
        },
        "serviceArguments": {
          "type": "object",
          "properties": {
            "externalIP": {
              "description": "IP address for externel access",
              "type": "string"
            },
            "port": {
              "description": "port number for the access",
              "type": "integer"
            },
            "protocol": {
              "description": "value for access protocol",
              "type": "string"
            }
          }
        }
      }
    },
    "LoadbalanceEntryEndpointsItems0": {
      "properties": {
        "endpointIP": {
          "description": "IP address for externel access",
          "type": "string"
        },
        "targetPort": {
          "description": "port number for access service",
          "type": "integer"
        },
        "weight": {
          "description": "Weight for the load balancing",
          "type": "integer"
        }
      }
    },
    "LoadbalanceEntryServiceArguments": {
      "type": "object",
      "properties": {
        "externalIP": {
          "description": "IP address for externel access",
          "type": "string"
        },
        "port": {
          "description": "port number for the access",
          "type": "integer"
        },
        "protocol": {
          "description": "value for access protocol",
          "type": "string"
        }
      }
    },
    "PortEntry": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PortEntryItems0"
      }
    },
    "PortEntryItems0": {
      "properties": {
        "DataplaneSync": {
          "description": "Dataplan Sync check",
          "type": "integer"
        },
        "portHardwareInformation": {
          "type": "object",
          "properties": {
            "link": {
              "description": "link status",
              "type": "boolean"
            },
            "macAddress": {
              "description": "MAC address of the port",
              "type": "string"
            },
            "master": {
              "description": "Port's mater",
              "type": "string"
            },
            "mtu": {
              "description": "MTU of the port",
              "type": "integer"
            },
            "rawMacAddress": {
              "description": "MAC address written by byte array",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "real": {
              "description": "real port..",
              "type": "string"
            },
            "state": {
              "description": "state...",
              "type": "boolean"
            },
            "tunnelId": {
              "description": "Tunnel Id such as VxLAN.",
              "type": "integer"
            }
          }
        },
        "portL2Information": {
          "type": "object",
          "properties": {
            "isPvid": {
              "description": "Is PVID config or not",
              "type": "boolean"
            },
            "vid": {
              "description": "virtual lan id(VLAN ID)",
              "type": "integer"
            }
          }
        },
        "portL3Information": {
          "type": "object",
          "properties": {
            "IPv4Address": {
              "description": "List of IP address v4",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "IPv6Address": {
              "description": "List of the IP address v6",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "routed": {
              "description": "Is routed or not",
              "type": "boolean"
            }
          }
        },
        "portName": {
          "description": "The name of the Port interface",
          "type": "string"
        },
        "portNo": {
          "description": "Index of the Port",
          "type": "integer"
        },
        "portSoftwareInformation": {
          "type": "object",
          "properties": {
            "bpfLoaded": {
              "description": "The status of the eBPF loaded",
              "type": "boolean"
            },
            "osId": {
              "description": "The ID of the Port in the software(OS)",
              "type": "integer"
            },
            "portActive": {
              "description": "Activation status of the port",
              "type": "boolean"
            },
            "portProp": {
              "description": "Priority of the port",
              "type": "integer"
            },
            "portType": {
              "description": "port type",
              "type": "integer"
            }
          }
        },
        "portStatisticInformation": {
          "type": "object",
          "properties": {
            "rxBytes": {
              "description": "Statistic of the ingress port bytes.",
              "type": "integer"
            },
            "rxErrors": {
              "description": "Statistic of the number of ingress Error packets.",
              "type": "integer"
            },
            "rxPackets": {
              "description": "Statistic of the number of ingress packets.",
              "type": "integer"
            },
            "txBytes": {
              "description": "Statistic of the egress port bytes.",
              "type": "integer"
            },
            "txErrors": {
              "description": "Statistic of the number of egress Error packets.",
              "type": "integer"
            },
            "txPackets": {
              "description": "Statistic of the number of egress packets.",
              "type": "integer"
            }
          }
        },
        "zone": {
          "description": "network zone",
          "type": "string"
        }
      }
    },
    "PortEntryItems0PortHardwareInformation": {
      "type": "object",
      "properties": {
        "link": {
          "description": "link status",
          "type": "boolean"
        },
        "macAddress": {
          "description": "MAC address of the port",
          "type": "string"
        },
        "master": {
          "description": "Port's mater",
          "type": "string"
        },
        "mtu": {
          "description": "MTU of the port",
          "type": "integer"
        },
        "rawMacAddress": {
          "description": "MAC address written by byte array",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "real": {
          "description": "real port..",
          "type": "string"
        },
        "state": {
          "description": "state...",
          "type": "boolean"
        },
        "tunnelId": {
          "description": "Tunnel Id such as VxLAN.",
          "type": "integer"
        }
      }
    },
    "PortEntryItems0PortL2Information": {
      "type": "object",
      "properties": {
        "isPvid": {
          "description": "Is PVID config or not",
          "type": "boolean"
        },
        "vid": {
          "description": "virtual lan id(VLAN ID)",
          "type": "integer"
        }
      }
    },
    "PortEntryItems0PortL3Information": {
      "type": "object",
      "properties": {
        "IPv4Address": {
          "description": "List of IP address v4",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IPv6Address": {
          "description": "List of the IP address v6",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "routed": {
          "description": "Is routed or not",
          "type": "boolean"
        }
      }
    },
    "PortEntryItems0PortSoftwareInformation": {
      "type": "object",
      "properties": {
        "bpfLoaded": {
          "description": "The status of the eBPF loaded",
          "type": "boolean"
        },
        "osId": {
          "description": "The ID of the Port in the software(OS)",
          "type": "integer"
        },
        "portActive": {
          "description": "Activation status of the port",
          "type": "boolean"
        },
        "portProp": {
          "description": "Priority of the port",
          "type": "integer"
        },
        "portType": {
          "description": "port type",
          "type": "integer"
        }
      }
    },
    "PortEntryItems0PortStatisticInformation": {
      "type": "object",
      "properties": {
        "rxBytes": {
          "description": "Statistic of the ingress port bytes.",
          "type": "integer"
        },
        "rxErrors": {
          "description": "Statistic of the number of ingress Error packets.",
          "type": "integer"
        },
        "rxPackets": {
          "description": "Statistic of the number of ingress packets.",
          "type": "integer"
        },
        "txBytes": {
          "description": "Statistic of the egress port bytes.",
          "type": "integer"
        },
        "txErrors": {
          "description": "Statistic of the number of egress Error packets.",
          "type": "integer"
        },
        "txPackets": {
          "description": "Statistic of the number of egress packets.",
          "type": "integer"
        }
      }
    },
    "RouteEntry": {
      "type": "object",
      "properties": {
        "destinationIPNet": {
          "description": "IP address and netmask",
          "type": "string"
        },
        "gateway": {
          "description": "IP address for nexthop",
          "type": "string"
        }
      }
    },
    "SessionEntry": {
      "type": "object",
      "properties": {
        "accessNetworkTunnel": {
          "type": "object",
          "properties": {
            "Address": {
              "description": "Access network IP address",
              "type": "string"
            },
            "TeID": {
              "description": "ID of the tunnel",
              "type": "number"
            }
          }
        },
        "connectionNetworkTunnel": {
          "type": "object",
          "properties": {
            "Address": {
              "description": "Connection network IP address",
              "type": "string"
            },
            "TeID": {
              "description": "ID of the tunnel",
              "type": "number"
            }
          }
        },
        "ident": {
          "description": "IP address and netmask",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address for nexthop",
          "type": "string"
        }
      }
    },
    "SessionEntryAccessNetworkTunnel": {
      "type": "object",
      "properties": {
        "Address": {
          "description": "Access network IP address",
          "type": "string"
        },
        "TeID": {
          "description": "ID of the tunnel",
          "type": "number"
        }
      }
    },
    "SessionEntryConnectionNetworkTunnel": {
      "type": "object",
      "properties": {
        "Address": {
          "description": "Connection network IP address",
          "type": "string"
        },
        "TeID": {
          "description": "ID of the tunnel",
          "type": "number"
        }
      }
    },
    "SessionUlClEntry": {
      "type": "object",
      "properties": {
        "ident": {
          "description": "IP address and netmask",
          "type": "string"
        },
        "ulclArgument": {
          "type": "object",
          "properties": {
            "Address": {
              "description": "Access network IP address",
              "type": "string"
            },
            "qfi": {
              "description": "...?",
              "type": "number"
            }
          }
        }
      }
    },
    "SessionUlClEntryUlclArgument": {
      "type": "object",
      "properties": {
        "Address": {
          "description": "Access network IP address",
          "type": "string"
        },
        "qfi": {
          "description": "...?",
          "type": "number"
        }
      }
    }
  }
}`))
}
